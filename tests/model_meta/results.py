from .models import (
    AbstractPerson, BasePerson, Person, Relating, Relation
)

TEST_RESULTS = {
    'fields': {
        Person: [
            'id',
            'pure_data_abstract',
            'relation_data_abstract_id',
            'data_not_concrete_abstract',
            'content_type_abstract_id',
            'object_id_abstract',
            'pure_data_base',
            'relation_data_base_id',
            'data_not_concrete_base',
            'content_type_base_id',
            'object_id_base',
            'baseperson_ptr_id',
            'pure_data_inherited',
            'relation_data_inherited_id',
            'data_not_concrete_inherited',
            'content_type_concrete_id',
            'object_id_concrete',
        ],
        BasePerson: [
            'id',
            'pure_data_abstract',
            'relation_data_abstract_id',
            'data_not_concrete_abstract',
            'content_type_abstract_id',
            'object_id_abstract',
            'pure_data_base',
            'relation_data_base_id',
            'data_not_concrete_base',
            'content_type_base_id',
            'object_id_base'
        ],
        AbstractPerson: [
            'pure_data_abstract',
            'relation_data_abstract_id',
            'data_not_concrete_abstract',
            'content_type_abstract_id',
            'object_id_abstract'
        ],
        Relating: [
            'id',
            'baseperson_id',
            'baseperson_hidden_id',
            'person_id',
            'person_hidden_id',
            'proxyperson_id',
            'proxyperson_hidden_id',
        ],
    },
    'local_fields': {
        Person: [
            'baseperson_ptr_id',
            'pure_data_inherited',
            'relation_data_inherited_id',
            'data_not_concrete_inherited',
            'content_type_concrete_id',
            'object_id_concrete',
        ],
        BasePerson: [
            'id',
            'pure_data_abstract',
            'relation_data_abstract_id',
            'data_not_concrete_abstract',
            'content_type_abstract_id',
            'object_id_abstract',
            'pure_data_base',
            'relation_data_base_id',
            'data_not_concrete_base',
            'content_type_base_id',
            'object_id_base',
        ],
        AbstractPerson: [
            'pure_data_abstract',
            'relation_data_abstract_id',
            'data_not_concrete_abstract',
            'content_type_abstract_id',
            'object_id_abstract',
        ],
        Relating: [
            'id',
            'baseperson_id',
            'baseperson_hidden_id',
            'person_id',
            'person_hidden_id',
            'proxyperson_id',
            'proxyperson_hidden_id',
        ],
    },
    'local_concrete_fields': {
        Person: [
            'baseperson_ptr_id',
            'pure_data_inherited',
            'relation_data_inherited_id',
            'content_type_concrete_id',
            'object_id_concrete',
        ],
        BasePerson: [
            'id',
            'pure_data_abstract',
            'relation_data_abstract_id',
            'content_type_abstract_id',
            'object_id_abstract',
            'pure_data_base',
            'relation_data_base_id',
            'content_type_base_id',
            'object_id_base',
        ],
        AbstractPerson: [
            'pure_data_abstract',
            'relation_data_abstract_id',
            'content_type_abstract_id',
            'object_id_abstract',
        ],
        Relating: [
            'id',
            'baseperson_id',
            'baseperson_hidden_id',
            'person_id',
            'person_hidden_id',
            'proxyperson_id',
            'proxyperson_hidden_id'
        ],
    },
    'many_to_many': {
        Person: [
            'm2m_abstract',
            'friends_abstract',
            'following_abstract',
            'm2m_base',
            'friends_base',
            'following_base',
            'm2m_inherited',
            'friends_inherited',
            'following_inherited',
        ],
        BasePerson: [
            'm2m_abstract',
            'friends_abstract',
            'following_abstract',
            'm2m_base',
            'friends_base',
            'following_base',
        ],
        AbstractPerson: [
            'm2m_abstract',
            'friends_abstract',
            'following_abstract',
        ],
        Relating: [
            'basepeople',
            'basepeople_hidden',
            'people',
            'people_hidden',
        ],
    },
    'many_to_many_with_model': {
        Person: [
            BasePerson,
            BasePerson,
            BasePerson,
            BasePerson,
            BasePerson,
            BasePerson,
            None,
            None,
            None,
        ],
        BasePerson: [
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        AbstractPerson: [
            None,
            None,
            None,
        ],
        Relating: [
            None,
            None,
            None,
            None,
        ],
    },
    'get_all_related_objects_with_model': {
        Person: (
            ('relating_baseperson', BasePerson),
            ('relating_person', None),
        ),
        BasePerson: (
            ('person', None),
            ('relating_baseperson', None),
        ),
        Relation: (
            ('fk_abstract_rel', None),
            ('fo_abstract_rel', None),
            ('fk_base_rel', None),
            ('fo_base_rel', None),
            ('fk_concrete_rel', None),
            ('fo_concrete_rel', None),
        ),
    },
    'get_all_related_objects_with_model_local': {
        Person: (
            ('relating_person', None),
        ),
        BasePerson: (
            ('person', None),
            ('relating_baseperson', None)
        ),
        Relation: (
            ('fk_abstract_rel', None),
            ('fo_abstract_rel', None),
            ('fk_base_rel', None),
            ('fo_base_rel', None),
            ('fk_concrete_rel', None),
            ('fo_concrete_rel', None),
        ),
    },
    'get_all_related_objects_with_model_hidden': {
        BasePerson: (
            ('model_meta:baseperson_friends_base', None),
            ('model_meta:baseperson_friends_base', None),
            ('model_meta:baseperson_m2m_base', None),
            ('model_meta:baseperson_following_base', None),
            ('model_meta:baseperson_following_base', None),
            ('model_meta:baseperson_m2m_abstract', None),
            ('model_meta:baseperson_friends_abstract', None),
            ('model_meta:baseperson_friends_abstract', None),
            ('model_meta:baseperson_following_abstract', None),
            ('model_meta:baseperson_following_abstract', None),
            ('model_meta:person', None),
            ('model_meta:relating_basepeople', None),
            ('model_meta:relating_basepeople_hidden', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
        ),
        Person: (
            ('model_meta:baseperson_friends_base', BasePerson),
            ('model_meta:baseperson_friends_base', BasePerson),
            ('model_meta:baseperson_m2m_base', BasePerson),
            ('model_meta:baseperson_following_base', BasePerson),
            ('model_meta:baseperson_following_base', BasePerson),
            ('model_meta:baseperson_m2m_abstract', BasePerson),
            ('model_meta:baseperson_friends_abstract', BasePerson),
            ('model_meta:baseperson_friends_abstract', BasePerson),
            ('model_meta:baseperson_following_abstract', BasePerson),
            ('model_meta:baseperson_following_abstract', BasePerson),
            ('model_meta:relating_basepeople', BasePerson),
            ('model_meta:relating_basepeople_hidden', BasePerson),
            ('model_meta:relating', BasePerson),
            ('model_meta:relating', BasePerson),
            ('model_meta:person_m2m_inherited', None),
            ('model_meta:person_friends_inherited', None),
            ('model_meta:person_friends_inherited', None),
            ('model_meta:person_following_inherited', None),
            ('model_meta:person_following_inherited', None),
            ('model_meta:relating_people', None),
            ('model_meta:relating_people_hidden', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
        ),
        Relation: (
            ('model_meta:baseperson_m2m_base', None),
            ('model_meta:baseperson_m2m_abstract', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:person_m2m_inherited', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:proxyperson', None),
            ('model_meta:proxyperson', None),
            ('model_meta:proxyperson', None),
        ),
    },
    'get_all_related_objects_with_model_hidden_local': {
        BasePerson: (
            ('model_meta:baseperson_friends_base', None),
            ('model_meta:baseperson_friends_base', None),
            ('model_meta:baseperson_m2m_base', None),
            ('model_meta:baseperson_following_base', None),
            ('model_meta:baseperson_following_base', None),
            ('model_meta:baseperson_m2m_abstract', None),
            ('model_meta:baseperson_friends_abstract', None),
            ('model_meta:baseperson_friends_abstract', None),
            ('model_meta:baseperson_following_abstract', None),
            ('model_meta:baseperson_following_abstract', None),
            ('model_meta:person', None),
            ('model_meta:relating_basepeople', None),
            ('model_meta:relating_basepeople_hidden', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
        ),
        Person: (
            ('model_meta:person_m2m_inherited', None),
            ('model_meta:person_friends_inherited', None),
            ('model_meta:person_friends_inherited', None),
            ('model_meta:person_following_inherited', None),
            ('model_meta:person_following_inherited', None),
            ('model_meta:relating_people', None),
            ('model_meta:relating_people_hidden', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
        ),
        Relation: (
            ('model_meta:baseperson_m2m_base', None),
            ('model_meta:baseperson_m2m_abstract', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:person_m2m_inherited', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:proxyperson', None),
            ('model_meta:proxyperson', None),
            ('model_meta:proxyperson', None),
        ),
    },
    'get_all_related_objects_with_model_proxy': {
        BasePerson: (
            ('person', None),
            ('relating_baseperson', None),
        ),
        Person: (
            ('relating_baseperson', BasePerson),
            ('relating_person', None), ('relating_proxyperson', None),
        ),
        Relation: (
            ('fk_abstract_rel', None), ('fo_abstract_rel', None),
            ('fk_base_rel', None), ('fo_base_rel', None),
            ('fk_concrete_rel', None), ('fo_concrete_rel', None),
        ),
    },
    'get_all_related_objects_with_model_proxy_hidden': {
        BasePerson: (
            ('model_meta:baseperson_friends_base', None),
            ('model_meta:baseperson_friends_base', None),
            ('model_meta:baseperson_m2m_base', None),
            ('model_meta:baseperson_following_base', None),
            ('model_meta:baseperson_following_base', None),
            ('model_meta:baseperson_m2m_abstract', None),
            ('model_meta:baseperson_friends_abstract', None),
            ('model_meta:baseperson_friends_abstract', None),
            ('model_meta:baseperson_following_abstract', None),
            ('model_meta:baseperson_following_abstract', None),
            ('model_meta:person', None),
            ('model_meta:relating_basepeople', None),
            ('model_meta:relating_basepeople_hidden', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
        ),
        Person: (
            ('model_meta:baseperson_friends_base', BasePerson),
            ('model_meta:baseperson_friends_base', BasePerson),
            ('model_meta:baseperson_m2m_base', BasePerson),
            ('model_meta:baseperson_following_base', BasePerson),
            ('model_meta:baseperson_following_base', BasePerson),
            ('model_meta:baseperson_m2m_abstract', BasePerson),
            ('model_meta:baseperson_friends_abstract', BasePerson),
            ('model_meta:baseperson_friends_abstract', BasePerson),
            ('model_meta:baseperson_following_abstract', BasePerson),
            ('model_meta:baseperson_following_abstract', BasePerson),
            ('model_meta:relating_basepeople', BasePerson),
            ('model_meta:relating_basepeople_hidden', BasePerson),
            ('model_meta:relating', BasePerson),
            ('model_meta:relating', BasePerson),
            ('model_meta:person_m2m_inherited', None),
            ('model_meta:person_friends_inherited', None),
            ('model_meta:person_friends_inherited', None),
            ('model_meta:person_following_inherited', None),
            ('model_meta:person_following_inherited', None),
            ('model_meta:relating_people', None),
            ('model_meta:relating_people_hidden', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
            ('model_meta:relating', None),
        ),
        Relation: (
            ('model_meta:baseperson_m2m_base', None),
            ('model_meta:baseperson_m2m_abstract', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:baseperson', None),
            ('model_meta:person_m2m_inherited', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:person', None),
            ('model_meta:proxyperson', None),
            ('model_meta:proxyperson', None),
            ('model_meta:proxyperson', None),
        ),
    },
    'get_all_related_many_to_many_with_model': {
        BasePerson: (
            ('friends_abstract_rel_+', None),
            ('followers_abstract', None),
            ('friends_base_rel_+', None),
            ('followers_base', None),
            ('relating_basepeople', None),
            ('+', None),
        ),
        Person: (
            ('friends_abstract_rel_+', BasePerson),
            ('followers_abstract', BasePerson),
            ('friends_base_rel_+', BasePerson),
            ('followers_base', BasePerson),
            ('relating_basepeople', BasePerson),
            ('+', BasePerson),
            ('friends_inherited_rel_+', None),
            ('followers_concrete', None),
            ('relating_people', None),
            ('+', None),
        ),
        Relation: (
            ('m2m_abstract_rel', None),
            ('m2m_base_rel', None),
            ('m2m_concrete_rel', None),
        ),
    },
    'get_all_related_many_to_many_local': {
        BasePerson: [
            'friends_abstract_rel_+',
            'followers_abstract',
            'friends_base_rel_+',
            'followers_base',
            'relating_basepeople',
            '+',
        ],
        Person: [
            'friends_inherited_rel_+',
            'followers_concrete',
            'relating_people',
            '+',
        ],
        Relation: [
            'm2m_abstract_rel',
            'm2m_base_rel',
            'm2m_concrete_rel',
        ],
    },
    'related_virtual': {
        AbstractPerson: [
            'generic_relation_abstract',
        ],
        BasePerson: [
            'generic_relation_base',
            'generic_relation_abstract',
        ],
        Person: [
            'generic_relation_concrete',
            'generic_relation_base',
            'generic_relation_abstract',
        ],
    },
    'legacy_virtual_fields': {
        AbstractPerson: [
            'content_object_abstract',
            'generic_relation_abstract',
        ],
        BasePerson: [
            'content_object_base',
            'content_object_abstract',
            'generic_relation_base',
            'generic_relation_abstract',
        ],
        Person: [
            'content_object_concrete',
            'content_object_base',
            'content_object_abstract',
            'generic_relation_concrete',
            'generic_relation_base',
            'generic_relation_abstract',
        ],
    },
    'virtual_fields': {
        AbstractPerson: [
            'content_object_abstract',
        ],
        BasePerson: [
            'content_object_base',
            'content_object_abstract',
        ],
        Person: [
            'content_object_concrete',
            'content_object_base',
            'content_object_abstract',
        ],
    },
}
